<?php

namespace Database\Factories;

use App\Models\CarQuote;
use Illuminate\Database\Eloquent\Factories\Factory;

class CarQuoteFactory extends Factory
{
    protected $model = CarQuote::class;
    /**
     * Define the model's default state.
     *
     * @return array
     */
    public function definition()
    {
        $carMakeIds = [135, 134, 133, 132, 131, 130, 129, 128, 127, 126, 125, 124, 123, 122, 121, 120, 119, 118, 117, 116, 115, 114, 113, 112, 110, 109];
        $carModelIds = [3, 4, 10, 12, 14, 17, 28, 36, 42, 43, 72, 73, 100, 111, 114, 115, 116, 117, 119, 120, 121, 122, 124, 125, 158, 160, 209, 214, 290, 291, 292, 293, 320, 407, 423, 426, 433, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 450, 457, 478, 495, 496, 508, 518, 519, 523, 530, 532, 537, 547, 548, 549, 550, 552, 557, 559, 560, 575, 585, 587, 589, 591, 592, 614, 622, 628, 632, 633, 639, 640, 643, 656, 659, 672, 677, 682, 692, 722, 725, 726, 729, 747, 759, 775, 799, 800, 804, 807, 808, 818, 837, 839, 844, 850, 853, 854, 855, 856, 857, 858, 859, 869, 870, 871, 872, 873, 874, 875, 878, 885, 911, 912, 917, 919, 920, 924, 931, 938, 943, 944, 948, 974, 978, 994, 995, 1041, 1042, 1048, 1051, 1060, 1061, 1067, 1070, 1087, 1089, 1090, 1091, 1110, 1118, 1153, 1166, 1175, 1202, 1219, 1222, 1230, 1231, 1232, 1238, 1241, 1252, 1281, 1299, 1320, 1324, 1330, 1331, 1332, 1334, 1390, 1427, 1428, 1432, 1444, 1445, 1457, 1486, 1494, 1504, 1505, 1511, 1522, 1548, 1558, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1582, 1587, 1592, 1593, 1594, 1595, 1608, 1613, 1616, 1617, 1620, 1621, 1630, 1666, 1667, 1675, 1695, 1709, 1754, 1755, 1756, 1767, 1820, 1821, 1822, 1823, 1831, 1849, 1852, 1885, 1886, 1894, 1897, 1941, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1952, 1953, 1954, 1955, 1969, 1986, 1988, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2004, 2015, 2028, 2031, 2042, 2044, 2063, 2066, 2069, 2074, 2077, 2078, 2081, 2082, 2089, 2090, 2091, 2096, 2101, 2111, 2112, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2136, 2140, 2143, 2147, 2161, 2164, 2178, 2183, 2189, 2190, 2195, 2197, 2213, 2214, 2215, 2242, 2269, 2270, 2271, 2286, 2314, 2315, 2318, 2347, 2385, 2386, 2387, 2418, 2420, 2444, 2448, 2454, 2463, 2476, 2490, 2510, 2627, 2628, 2630, 2631, 2632, 2633, 2634, 2635, 2636, 2637, 2638, 2639, 2640, 2641, 2642, 2643, 2644, 2645, 2646, 2647, 2648, 2649, 2650, 2651, 2652, 2660, 2661, 2676, 2687, 2688, 2708, 2710, 2711, 2712, 2713, 2714, 2715, 2727, 2738, 2747, 2754, 2761, 2765, 2768, 2789, 2814, 2816, 2829, 2843, 2846, 2862, 2863, 2864, 2865, 2866, 2867, 2868, 2869, 2873, 2878, 2880, 2899, 2915, 2917, 2936, 2937, 2958, 2967, 2975, 2976, 2977, 2982, 3002, 3019, 3026, 3030, 3033, 3034, 3048, 3052, 3053, 3056, 3060, 3061, 3068, 3070, 3071, 3072, 3081, 3091, 3107, 3119, 3136, 3142, 3146, 3147, 3208, 3210, 3220, 3235, 3238, 3244, 3247, 3248, 3256, 3259, 3289, 3290, 3292, 3301, 3302, 3303, 3304, 3305, 3306, 3309, 3312, 3313, 3314, 3317, 3320, 3329, 3336, 3337, 3338, 3345, 3356, 3357, 3385, 3401, 3407, 3409, 3410, 3418, 3423, 3424, 3429, 3433, 3447, 3448, 3449, 3454, 3455, 3458, 3460, 3476, 3477, 3480, 3482, 3488, 3498, 3508, 3509, 3542, 3544, 3546, 3547, 3548, 3551, 3571, 3572, 3576, 3588, 3592, 3602, 3603, 3609, 3617, 3618, 3623, 3627, 3628, 3629, 3630, 3632, 3642, 3643, 3644, 3647, 3653, 3659, 3661, 3668, 3684, 3689, 3695, 3702, 3715, 3716, 3717, 3719, 3745, 3748, 3751, 3752, 3768, 3771, 3772, 3773, 3774, 3778, 3789, 3797, 3800, 3812, 3814, 3815, 3816, 3827, 3828, 3829, 3830, 3831, 3833, 3843, 3850, 3858];
        $nationalityIds = [225, 224, 223, 222, 221, 220, 219, 218, 217, 216, 215, 214, 213, 212, 211, 210, 209, 208, 207, 206, 205, 204, 203, 202, 201, 200, 199, 198, 197, 196];
        $quoteStatusIds = [9, 33, 35, 17];
        $quoteBatchIds = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229];
        $tierIds = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12];
        $sources = ['TPL_RENEWALS', 'TPL_Renewal', 'TPL_COMP', 'TPL Renewal', 'TM_WHATSAPP', 'TM_SP_RENEWAL', 'TM_RENEWALS', 'TM_ORGANIC', 'TM_OFFSHORE', 'TM_FACEBOOK', 'TIER_L_QUALFIED',
            'test', 'REVIVE', 'REVIVAL', 'Renewal_upload', 'REFERRAL', 'RECYCLED', 'IMCRM', ];
        $uuid = $this->faker->regexify('[A-Za-z0-9]{8}');
        $users = [1, 3, 11, 35, 36, 48, 86, 91, 93, 111, 131, 138, 140, 141, 153, 156, 163, 213, 214, 245, 285, 293, 294, 307, 317, 322, 437, 473, 475, 481, 493, 503, 509, 515, 516, 517, 518, 522, 523, 525, 526, 527, 532, 533, 534, 536, 539, 540, 544, 545, 546, 553, 558, 560, 561, 562, 800, 801, 803, 806, 807, 826, 827, 850, 851, 852, 853, 854, 855, 862, 872, 873, 874, 875, 877, 878, 879, 880, 881, 882];

        return [
            'uuid' => strtoupper($uuid),
            'is_ecommerce' => $this->faker->boolean(),
            'car_value' => $this->faker->numberBetween(5000, 200000),
            'car_make_id' => $this->faker->randomElement(($carMakeIds)),
            'car_model_id' => $this->faker->randomElement(($carModelIds)),
            'first_name' => $this->faker->name(),
            'last_name' => $this->faker->name(),
            'email' => $this->faker->unique()->email,
            'mobile_no' => $this->faker->unique()->phoneNumber,
            'source' => $this->faker->randomElement(($sources)),
            'nationality_id' => $this->faker->randomElement(($nationalityIds)),
            'quote_status_id' => $this->faker->randomElement(($quoteStatusIds)),
            'created_at' => now(),
            'code' => 'CAR-'.strtoupper($uuid),
            'created_by' => 17,
            'policy_expiry_date' => $this->faker->dateTime('now'),
            'tier_id' => $this->faker->randomElement(($tierIds)),
            'quote_batch_id' => $this->faker->randomElement(($quoteBatchIds)),
            // 'advisor_id' => $this->faker->randomElement($users),
        ];
    }
}
